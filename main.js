(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._header=e.headers}var n,r;return n=t,(r=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getInitialProfile",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._header}).then(this._checkResponse)}},{key:"getInitialCard",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._header}).then(this._checkResponse)}},{key:"patchProfile",value:function(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._header,body:JSON.stringify({name:e.name,about:e.subName})}).then(this._checkResponse)}},{key:"addNewCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._header,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}},{key:"deliteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._header}).then(this._checkResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._header}).then(this._checkResponse)}},{key:"deliteLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._header}).then(this._checkResponse)}},{key:"patchAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._header,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.input)),this._buttonElement=this._formElement.querySelector(this._config.buttom)}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)})),this._toggleButtonState(this._inputList,this._buttonElement)}},{key:"_setEventListeners",value:function(){var e=this;this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState(e._inputList,e._buttonElement)}))}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._config.inputError),n.textContent=t,n.classList.add(this._config.spanError)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._config.inputError),t.classList.remove(this._config.spanError),t.textContent=""}},{key:"_disableButton",value:function(e){e.classList.remove(this._config.buttonValid),e.classList.add(this._config.buttonInvalid),e.setAttribute("disabled",!0)}},{key:"_activateButton",value:function(e){e.classList.add(this._config.buttonValid),e.classList.remove(this._config.buttonInvalid),e.removeAttribute("disabled")}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?this._disableButton(t):this._activateButton(t)}},{key:"_hasInvalidInput",value:function(e){return this._inputList.some((function(e){return!e.validity.valid}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.item,o=t.userData,i=t.handleCardClick,a=t.addLikeClick,c=t.removeLikeClick,u=t.handleDeliteIconClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._card=r,this._profileId=o._id,this._template=document.querySelector(n).content,this._handleCardClick=i,this._handleDeliteIconClick=u,this._addLikeClick=a,this._removeLikeClick=c,this._element=this._template.querySelector(".element").cloneNode(!0),this._cardImage=this._element.querySelector(".element__image"),this._deliteIcon=this._element.querySelector(".element__delite"),this._like=this._element.querySelector(".element__like"),this._likeNumber=this._element.querySelector(".element__like-amount")}var t,n;return t=e,(n=[{key:"renderCards",value:function(){return this._element.querySelector(".element__text").textContent=this._card.name,this._cardImage.src=this._card.link,this._cardImage.alt=this._card.name,this._renderLike(),this._renderLikeNumber(),this._removeDeliteIcon(),this._setEventListeners(),this._element}},{key:"_renderLikeNumber",value:function(){this._likeNumber.textContent=this._card.likes.length}},{key:"_setEventListeners",value:function(){var e=this;this._like.addEventListener("click",(function(t){e._handleLikeClick(e)})),this._cardImage.addEventListener("click",this._handleCardClick)}},{key:"_setEventDelite",value:function(){this._deliteIcon.addEventListener("click",this._handleDeliteIconClick)}},{key:"_handleLikeClick",value:function(){this._like.classList.contains("element__like_active")?this._removeLikeClick():this._addLikeClick()}},{key:"toggleLike",value:function(){this._like.classList.toggle("element__like_active")}},{key:"_renderLike",value:function(){var e=this;this._card.likes.forEach((function(t){e._profileId===t._id&&e.toggleLike()}))}},{key:"renderNumberLike",value:function(e){this._likeNumber.textContent=e.likes.length}},{key:"_removeDeliteIcon",value:function(){this._profileId!==this._card.owner._id?this._deliteIcon.remove():this._setEventDelite()}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t,n){var r=t.data,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}},{key:"renderItem",value:function(e){this._renderer(e)}},{key:"setItem",value:function(e){this._container.prepend(e)}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._button=this._popup.querySelector(".popup__button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){this._popup.addEventListener("mousedown",this._handleOverlayClose.bind(this))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleOverlayClose",value:function(e){(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}},{key:"renderLoading",value:function(e,t){this._button.textContent=e?"Сохранение...":t}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=h(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},p.apply(this,arguments)}function h(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}function d(e,t){return d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},d(e,t)}function y(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&d(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(e,t){var n,r=e.submitForm;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._submitForm=r,n._form=n._popup.querySelector(".popup__form"),n._inputList=n._popup.querySelectorAll(".popup__input"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"getInputValues",value:function(){return this._getInputValues()}},{key:"setEventListeners",value:function(){p(_(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._submitForm)}},{key:"close",value:function(){p(_(a.prototype),"close",this).call(this),this._form.reset()}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},k.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}function E(e,t){return E=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},E(e,t)}function w(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=L(r);if(o){var n=L(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(n=[{key:"open",value:function(e,t){var n=this._popup.querySelector(".popup-image__image"),r=this._popup.querySelector(".popup-image__title");n.src=t,n.alt=e,r.textContent=e,k(L(a.prototype),"open",this).call(this)}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=document.querySelector(t),this._profileSubName=document.querySelector(n),this._profileAvatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"setAvatar",value:function(e){this._profileAvatar.src=e}},{key:"getUserInfo",value:function(){return{name:this._profileName.textContent,subName:this._profileSubName.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._profileName.textContent=t,this._profileSubName.textContent=n}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=R(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},P.apply(this,arguments)}function R(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=D(e)););return e}function q(e,t){return q=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},q(e,t)}function V(e,t){if(t&&("object"===I(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function D(e){return D=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},D(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&q(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=D(r);if(o){var n=D(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return V(this,e)});function a(e,t){var n,r=e.submitForm;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._submitForm=r,n._form=n._popup.querySelector(".popup__form"),n._id="",n._card="",n._cardElement="",n}return t=a,(n=[{key:"setEventListeners",value:function(){P(D(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._submitForm)}},{key:"setCard",value:function(e,t){this._id=e._id,this._card=e,this._cardElement=t}},{key:"getCardElement",value:function(){return this._cardElement}},{key:"getCard",value:function(){return this._card}},{key:"getIdCard",value:function(){return this._id}}])&&j(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l),N={form:".popup__form",input:".popup__input",buttom:".popup__button",inputError:"popup__input_type_error",spanError:"popup__input-error",buttonValid:"popup__button_valid",buttonInvalid:"popup__button_invalid",formCardAdd:"popup__form_cards-add"},A=document.querySelector(".profile__info-button"),x=document.querySelector(".profile__button"),U=document.querySelector(".profile__button-avatar"),B=document.querySelector(".popup_edit-profile"),F=document.querySelector(".popup_cards-add"),J=document.querySelector(".popup-avatar");function H(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var M=new r(N,B),z=new r(N,F),$=new r(N,J);M.enableValidation(),z.enableValidation(),$.enableValidation();var G=new t({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-41",headers:{authorization:"535d3a03-0687-4a91-b587-5369f637f559","Content-Type":"application/json"}});Promise.all([G.getInitialProfile(),G.getInitialCard()]).then((function(e){return e})).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return H(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?H(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],a=r[1],u=new S(".profile__name",".profile__sub-name",".profile__avatar");u.setUserInfo(o),u.setAvatar(o.avatar);var l=new v({submitForm:function(e){e.preventDefault(),l.renderLoading(!0),G.patchProfile(l.getInputValues()).then((function(e){u.setUserInfo(e),l.close()})).catch((function(e){console.log(e)})).finally((function(){l.renderLoading(!1,"Сохранить")}))}},".popup_edit-profile");l.setEventListeners();var s=new v({submitForm:function(e){e.preventDefault(),s.renderLoading(!0),G.addNewCard(s.getInputValues()).then((function(e){d.renderItem(e),s.close()})).catch((function(e){console.log(e)})).finally((function(){s.renderLoading(!1,"Создать")}))}},".popup_cards-add");s.setEventListeners();var f=new T({submitForm:function(e){e.preventDefault(),f.renderLoading(!0),G.deliteCard(f.getIdCard()).then((function(e){f.getCardElement().remove(),f.close()})).catch((function(e){console.log(e)})).finally((function(){f.renderLoading(!1,"Да")}))}},".popup-delite-card");f.setEventListeners();var p=new v({submitForm:function(e){e.preventDefault(),p.renderLoading(!0),G.patchAvatar(p.getInputValues().link).then((function(e){u.setAvatar(e.avatar),p.close()})).catch((function(e){console.log(e)})).finally((function(){p.renderLoading(!1,"Сохранить")}))}},".popup-avatar");p.setEventListeners();var h=new O(".popup-image");h.setEventListeners();var d=new c({data:a,renderer:function(e){var t=new i({item:e,userData:o,handleCardClick:function(){h.open(e.name,e.link)},addLikeClick:function(){G.addLike(e._id).then((function(e){t.toggleLike(),t.renderNumberLike(e)})).catch((function(e){console.log(e)}))},removeLikeClick:function(){G.deliteLike(e._id).then((function(e){t.toggleLike(),t.renderNumberLike(e)})).catch((function(e){console.log(e)}))},handleDeliteIconClick:function(t){f.setCard(e,t.target.closest(".element")),f.open()}},".template-element"),n=t.renderCards();d.setItem(n)}},".elements__grid");A.addEventListener("click",(function(){l.setInputValues(u.getUserInfo()),M.resetValidation(),l.open()})),x.addEventListener("click",(function(){z.resetValidation(),s.open()})),U.addEventListener("click",(function(){$.resetValidation(),p.open()})),d.renderItems()})).catch((function(e){console.log(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,