(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._authorization="535d3a03-0687-4a91-b587-5369f637f559"}var n,r;return n=t,(r=[{key:"getInitialProfile",value:function(){return fetch("https://nomoreparties.co/v1/cohort-41/users/me",{headers:{authorization:this._authorization}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"getInitialCard",value:function(){return fetch("https://mesto.nomoreparties.co/v1/cohort-41/cards",{headers:{authorization:this._authorization}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"patchProfile",value:function(e){return fetch("https://mesto.nomoreparties.co/v1/cohort-41/users/me",{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.subName})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"addNewCard",value:function(e){return fetch("https://mesto.nomoreparties.co/v1/cohort-41/cards",{method:"POST",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"deliteCard",value:function(e){return fetch("https://mesto.nomoreparties.co/v1/cohort-41/cards/".concat(e),{method:"DELETE",headers:{authorization:this._authorization}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"addLike",value:function(e){return fetch("https://mesto.nomoreparties.co/v1/cohort-41/cards/".concat(e,"/likes"),{method:"PUT",headers:{authorization:this._authorization}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"deliteLike",value:function(e){return fetch("https://mesto.nomoreparties.co/v1/cohort-41/cards/".concat(e,"/likes"),{method:"DELETE",headers:{authorization:this._authorization}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"patchAvatar",value:function(e){return fetch("https://mesto.nomoreparties.co/v1/cohort-41/users/me/avatar",{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.input)),this._buttonElement=this._formElement.querySelector(this._config.buttom)}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)})),this._toggleButtonState(this._inputList,this._buttonElement)}},{key:"_setEventListeners",value:function(){var e=this;this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState(e._inputList,e._buttonElement)}))}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._config.inputError),n.textContent=t,n.classList.add(this._config.spanError)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._config.inputError),t.classList.remove(this._config.spanError),t.textContent=""}},{key:"_disableButton",value:function(e){e.classList.remove(this._config.buttonValid),e.classList.add(this._config.buttonInvalid),e.setAttribute("disabled",!0)}},{key:"_activateButton",value:function(e){e.classList.add(this._config.buttonValid),e.classList.remove(this._config.buttonInvalid),e.removeAttribute("disabled")}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?this._disableButton(t):this._activateButton(t)}},{key:"_hasInvalidInput",value:function(e){return this._inputList.some((function(e){return!e.validity.valid}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.item,o=t.handleCardClick,i=t.handleLikeClick,a=t.handleDeliteIconClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._card=r,this._template=document.querySelector(n).content,this._handleCardClick=o,this._handleDeliteIconClick=a,this._handleLikeClick=i,this._element=this._template.querySelector(".element").cloneNode(!0),this._cardImage=this._element.querySelector(".element__image"),this._deliteIcon=this._element.querySelector(".element__delite"),this._like=this._element.querySelector(".element__like"),this._likeNumber=this._element.querySelector(".element__like-amount")}var t,n;return t=e,n=[{key:"renderCards",value:function(){return this._element.querySelector(".element__text").textContent=this._card.name,this._cardImage.src=this._card.link,this._cardImage.alt=this._card.name,this._renderLikeNumber(),this._setEventListeners(),this._element}},{key:"_renderLikeNumber",value:function(){this._element.querySelector(".element__like-amount").textContent=this._card.likes.length}},{key:"_setEventListeners",value:function(){this._element.querySelector(".element__like").addEventListener("click",this._handleLikeClick),this._cardImage.addEventListener("click",this._handleCardClick)}},{key:"_setEventDelite",value:function(){this._deliteIcon.addEventListener("click",this._handleDeliteIconClick)}},{key:"renderLike",value:function(e,t){var n=this;t.forEach((function(t){e===t._id&&n._like.classList.toggle("element__like_active")}))}},{key:"augmentNumberLike",value:function(){this._likeNumber.textContent=Number(this._likeNumber.textContent)+1}},{key:"subtractNumberLike",value:function(){this._likeNumber.textContent=Number(this._likeNumber.textContent)-1}},{key:"removeDeliteIcon",value:function(e,t){e!==t?this._deliteIcon.remove():this._setEventDelite()}}],n&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){var r=t.data,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}},{key:"renderItem",value:function(e){this._renderer(e)}},{key:"setItem",value:function(e){this._container.prepend(e)}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._button=this._popup.querySelector(".popup__button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){this._popup.addEventListener("click",this._handleOverlayClose.bind(this))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleOverlayClose",value:function(e){(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}},{key:"renderLoading",value:function(e,t){this._button.textContent=e?"Сохранение...":t}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=h(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},p.apply(this,arguments)}function h(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}function d(e,t){return d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},d(e,t)}function y(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var m=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&d(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(e,t){var n,r=e.submitForm;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._submitForm=r,n._form=n._popup.querySelector(".popup__form"),n._inputList=n._popup.querySelectorAll(".popup__input"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"getInputValues",value:function(){return this._getInputValues()}},{key:"setEventListeners",value:function(){p(_(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._submitForm)}},{key:"close",value:function(){p(_(a.prototype),"close",this).call(this),this._form.reset()}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},k.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}function E(e,t){return E=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},E(e,t)}function w(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=L(r);if(o){var n=L(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(n=[{key:"open",value:function(e,t){var n=this._popup.querySelector(".popup-image__image"),r=this._popup.querySelector(".popup-image__title");n.src=t,n.alt=e,r.textContent=e,k(L(a.prototype),"open",this).call(this)}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=document.querySelector(t),this._profileSubName=document.querySelector(n)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._profileName.textContent,subName:this._profileSubName.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._profileName.textContent=t,this._profileSubName.textContent=n}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=q(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},I.apply(this,arguments)}function q(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}function N(e,t){return N=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},N(e,t)}function R(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}var V=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&N(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return R(this,e)});function a(e,t){var n,r=e.submitForm;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._submitForm=r,n._form=n._popup.querySelector(".popup__form"),n._id="",n._card="",n._cardElement="",n}return t=a,(n=[{key:"setEventListeners",value:function(){I(T(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._submitForm)}},{key:"setCard",value:function(e,t){this._id=e._id,this._card=e,this._cardElement=t}},{key:"getCardElement",value:function(){return this._cardElement}},{key:"getCard",value:function(){return this._card}},{key:"getIdCard",value:function(){return this._id}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l),x=[],D={form:".popup__form",input:".popup__input",buttom:".popup__button",inputError:"popup__input_type_error",spanError:"popup__input-error",buttonValid:"popup__button_valid",buttonInvalid:"popup__button_invalid",formCardAdd:"popup__form_cards-add"},z=document.querySelector(".profile__info-button"),B=document.querySelector(".profile__button"),A=document.querySelector(".profile__button-avatar"),F=document.querySelector(".popup_edit-profile"),U=document.querySelector(".popup_cards-add"),J=document.querySelector(".popup-avatar"),H="",M=new r(D,F),G=new r(D,U),K=new r(D,J);M.enableValidation(),G.enableValidation(),K.enableValidation();var Q=new t;Q.getInitialProfile().then((function(e){var t=document.querySelector(".profile__name"),n=document.querySelector(".profile__sub-name"),r=document.querySelector(".profile__avatar");return t.textContent=e.name,n.textContent=e.about,r.src=e.avatar,H=e._id,Q.getInitialCard()})).then((function(e){e.forEach((function(e){x.push(e)}));var t=new j(".profile__name",".profile__sub-name"),n=new m({submitForm:function(e){e.preventDefault(),a.renderLoading(!0),Q.patchProfile(n.getInputValues()).then((function(e){t.setUserInfo(e)})).catch((function(e){console.log(e)})).finally((function(){a.renderLoading(!1,"Сохранить"),n.close()}))}},".popup_edit-profile");n.setEventListeners();var r=new m({submitForm:function(e){e.preventDefault(),r.renderLoading(!0),Q.addNewCard(r.getInputValues()).then((function(e){l.renderItem(e)})).catch((function(e){console.log(e)})).finally((function(){r.renderLoading(!1,"Создать"),r.close()}))}},".popup_cards-add");r.setEventListeners();var o=new V({submitForm:function(e){e.preventDefault(),o.renderLoading(!0),Q.deliteCard(o.getIdCard()).then((function(e){o.getCardElement().remove()})).catch((function(e){console.log(e)})).finally((function(){o.renderLoading(!1,"Да"),o.close()}))}},".popup-delite-card");o.setEventListeners();var a=new m({submitForm:function(e){e.preventDefault(),a.renderLoading(!0);var t=document.querySelector(".profile__avatar"),n=a.getInputValues();Q.patchAvatar(n.link).then((function(e){t.src=n.link})).catch((function(e){console.log(e)})).finally((function(){a.renderLoading(!1,"Сохранить"),a.close()}))}},".popup-avatar");a.setEventListeners();var c=new C(".popup-image");c.setEventListeners();var l=new u({data:x,renderer:function(e){var t=new i({item:e,handleCardClick:function(){c.open(e.name,e.link)},handleLikeClick:function(n){n.target.classList.toggle("element__like_active"),n.target.classList.contains("element__like_active")?Q.addLike(e._id).then((function(e){t.augmentNumberLike()})).catch((function(e){console.log(e)})):Q.deliteLike(e._id).then((function(e){t.subtractNumberLike()})).catch((function(e){console.log(e)}))},handleDeliteIconClick:function(t){o.setCard(e,t.target.closest(".element")),o.open()}},".template-element");t.renderLike(H,e.likes),t.removeDeliteIcon(H,e.owner._id);var n=t.renderCards();l.setItem(n)}},".elements__grid");z.addEventListener("click",(function(){M.resetValidation(),n.setInputValues(t.getUserInfo()),n.open()})),B.addEventListener("click",(function(){G.resetValidation(),r.open()})),A.addEventListener("click",(function(){K.resetValidation(),a.open()})),l.renderItems()})).catch((function(e){console.log(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QkFDZmpDLE9BQU0sU0FBQ0MsR0FDUkMsUUFBUUMsSUFBSUYsTyIsInNvdXJjZXMiOlsid2VicGFjazovL21lc3RvLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aFN1Ym1pdC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHRzL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQXBpIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5fYXV0aG9yaXphdGlvbiA9ICc1MzVkM2EwMy0wNjg3LTRhOTEtYjU4Ny01MzY5ZjYzN2Y1NTknO1xuICB9XG5cbiAgZ2V0SW5pdGlhbFByb2ZpbGUoKSB7XG4gICAgcmV0dXJuIGZldGNoKCdodHRwczovL25vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTQxL3VzZXJzL21lJywge1xuICAgICAgaGVhZGVyczp7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2F1dGhvcml6YXRpb25cbiAgICAgIH1cbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0SW5pdGlhbENhcmQoKSB7XG4gICAgcmV0dXJuIGZldGNoKCdodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTQxL2NhcmRzJywge1xuICAgICAgaGVhZGVyczp7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2F1dGhvcml6YXRpb25cbiAgICAgIH1cbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pO1xuICB9XG5cbiAgcGF0Y2hQcm9maWxlKGRhdGEpIHtcbiAgICByZXR1cm4gZmV0Y2goJ2h0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtNDEvdXNlcnMvbWUnLCB7XG4gICAgICBtZXRob2Q6ICdQQVRDSCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2F1dGhvcml6YXRpb24sXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICAgICAgYWJvdXQ6IGRhdGEuc3ViTmFtZVxuICAgICAgfSlcbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pO1xuICB9XG5cbiAgYWRkTmV3Q2FyZChkYXRhKSB7XG4gICAgcmV0dXJuIGZldGNoKCdodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTQxL2NhcmRzJywge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2F1dGhvcml6YXRpb24sXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICAgICAgbGluazogZGF0YS5saW5rXG4gICAgICB9KVxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfSk7XG4gIH1cblxuICBkZWxpdGVDYXJkKGlkKSB7XG4gICAgcmV0dXJuIGZldGNoKGBodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTQxL2NhcmRzLyR7aWR9YCwge1xuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICAgIGhlYWRlcnM6e1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl9hdXRob3JpemF0aW9uXG4gICAgICB9XG4gICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LA6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KTtcbiAgfVxuXG4gIGFkZExpa2UoaWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYGh0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtNDEvY2FyZHMvJHtpZH0vbGlrZXNgLCB7XG4gICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgaGVhZGVyczp7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2F1dGhvcml6YXRpb25cbiAgICAgIH1cbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pO1xuICB9XG5cbiAgZGVsaXRlTGlrZShpZCkge1xuICAgIHJldHVybiBmZXRjaChgaHR0cHM6Ly9tZXN0by5ub21vcmVwYXJ0aWVzLmNvL3YxL2NvaG9ydC00MS9jYXJkcy8ke2lkfS9saWtlc2AsIHtcbiAgICAgIG1ldGhvZDogJ0RFTEVURScsXG4gICAgICBoZWFkZXJzOntcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fYXV0aG9yaXphdGlvblxuICAgICAgfVxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfSk7XG4gIH1cblxuICBwYXRjaEF2YXRhcihkYXRhKSB7XG4gICAgcmV0dXJuIGZldGNoKCdodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTQxL3VzZXJzL21lL2F2YXRhcicsIHtcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fYXV0aG9yaXphdGlvbixcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgYXZhdGFyOiBkYXRhXG4gICAgICB9KVxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfSk7XG4gIH1cblxufVxuIiwiZXhwb3J0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG4gIGNvbnN0cnVjdG9yKGNvbmZpZywgZm9ybUVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5fY29uZmlnLmlucHV0KSk7XHJcbiAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9jb25maWcuYnV0dG9tKTtcclxuICB9XHJcblxyXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxuXHJcbiAgcmVzZXRWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSh0aGlzLl9pbnB1dExpc3QsIHRoaXMuX2J1dHRvbkVsZW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKHRoaXMuX2lucHV0TGlzdCwgdGhpcy5fYnV0dG9uRWxlbWVudCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuXHJcbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpe1xyXG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLmlucHV0RXJyb3IpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLnNwYW5FcnJvcik7XHJcbiAgfVxyXG5cclxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWcuaW5wdXRFcnJvcik7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWcuc3BhbkVycm9yKTtcclxuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9ICcnO1xyXG4gIH1cclxuXHJcbiAgX2Rpc2FibGVCdXR0b24oYnV0dG9uRWxlbWVudCkge1xyXG4gICAgYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2NvbmZpZy5idXR0b25WYWxpZCk7XHJcbiAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLmJ1dHRvbkludmFsaWQpO1xyXG4gICAgYnV0dG9uRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgdHJ1ZSk7XHJcbiAgfVxyXG5cclxuICBfYWN0aXZhdGVCdXR0b24oYnV0dG9uRWxlbWVudCkge1xyXG4gICAgYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2NvbmZpZy5idXR0b25WYWxpZCk7XHJcbiAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmJ1dHRvbkludmFsaWQpO1xyXG4gICAgYnV0dG9uRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XHJcbiAgfVxyXG5cclxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50KSB7XHJcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkpIHtcclxuICAgICAgdGhpcy5fZGlzYWJsZUJ1dHRvbihidXR0b25FbGVtZW50KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2FjdGl2YXRlQnV0dG9uKGJ1dHRvbkVsZW1lbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX2hhc0ludmFsaWRJbnB1dChfaW5wdXRMaXN0KSB7XHJcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKHtpdGVtLCBoYW5kbGVDYXJkQ2xpY2ssIGhhbmRsZUxpa2VDbGljaywgaGFuZGxlRGVsaXRlSWNvbkNsaWNrfSwgc2VsZWN0b3JUZW1wbGF0ZSkge1xuICAgIHRoaXMuX2NhcmQgPSBpdGVtO1xuICAgIHRoaXMuX3RlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvclRlbXBsYXRlKS5jb250ZW50O1xuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcbiAgICB0aGlzLl9oYW5kbGVEZWxpdGVJY29uQ2xpY2sgPSBoYW5kbGVEZWxpdGVJY29uQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlTGlrZUNsaWNrID0gaGFuZGxlTGlrZUNsaWNrO1xuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl90ZW1wbGF0ZS5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudCcpLmNsb25lTm9kZSh0cnVlKTtcbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19pbWFnZScpO1xuICAgIHRoaXMuX2RlbGl0ZUljb24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19kZWxpdGUnKTtcbiAgICB0aGlzLl9saWtlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZScpO1xuICAgIHRoaXMuX2xpa2VOdW1iZXIgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19saWtlLWFtb3VudCcpO1xuICB9XG5cbiAgcmVuZGVyQ2FyZHMgKCkge1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX3RleHQnKS50ZXh0Q29udGVudCA9IHRoaXMuX2NhcmQubmFtZTtcbiAgICB0aGlzLl9jYXJkSW1hZ2Uuc3JjID0gdGhpcy5fY2FyZC5saW5rO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aGlzLl9jYXJkLm5hbWU7XG4gICAgdGhpcy5fcmVuZGVyTGlrZU51bWJlcigpO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIH1cblxuICBfcmVuZGVyTGlrZU51bWJlciAoKSB7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZS1hbW91bnQnKS50ZXh0Q29udGVudCA9IHRoaXMuX2NhcmQubGlrZXMubGVuZ3RoO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2xpa2UnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2hhbmRsZUxpa2VDbGljayk7XG4gICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJyx0aGlzLl9oYW5kbGVDYXJkQ2xpY2spO1xuICB9XG5cbiAgX3NldEV2ZW50RGVsaXRlKCkge1xuICAgIHRoaXMuX2RlbGl0ZUljb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9oYW5kbGVEZWxpdGVJY29uQ2xpY2spO1xuICB9XG5cbiAgcmVuZGVyTGlrZShwcm9maWxlSWQsIGNhcmRJZCkge1xuICAgIGNhcmRJZC5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgaWYocHJvZmlsZUlkID09PSBpdGVtLl9pZCkge1xuICAgICAgICB0aGlzLl9saWtlLmNsYXNzTGlzdC50b2dnbGUoJ2VsZW1lbnRfX2xpa2VfYWN0aXZlJyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBhdWdtZW50TnVtYmVyTGlrZSgpIHtcbiAgICB0aGlzLl9saWtlTnVtYmVyLnRleHRDb250ZW50ID0gTnVtYmVyKHRoaXMuX2xpa2VOdW1iZXIudGV4dENvbnRlbnQpICsgMTtcbiAgfVxuXG4gIHN1YnRyYWN0TnVtYmVyTGlrZSgpIHtcbiAgICB0aGlzLl9saWtlTnVtYmVyLnRleHRDb250ZW50ID0gTnVtYmVyKHRoaXMuX2xpa2VOdW1iZXIudGV4dENvbnRlbnQpIC0gMTtcbiAgfVxuXG4gIHJlbW92ZURlbGl0ZUljb24ocHJvZmlsZUlkLCBjYXJkSWQpIHtcbiAgICBpZihwcm9maWxlSWQgIT09IGNhcmRJZCkge1xuICAgICAgdGhpcy5fZGVsaXRlSWNvbi5yZW1vdmUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fc2V0RXZlbnREZWxpdGUoKTtcbiAgICB9XG4gIH1cbn1cbiIsImV4cG9ydCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7ZGF0YSwgcmVuZGVyZXJ9LCBjb250YWluZXJTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fcmVuZGVyZWRJdGVtcyA9IGRhdGE7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICByZW5kZXJJdGVtcygpIHtcclxuICAgIHRoaXMuX3JlbmRlcmVkSXRlbXMuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHJlbmRlckl0ZW0oaXRlbSkge1xyXG4gICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XHJcbiAgfVxyXG5cclxuICBzZXRJdGVtKGVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cCkge1xuICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cCk7XG4gICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX2J1dHRvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fYnV0dG9uJyk7XG4gIH1cbiAgb3BlbigpIHtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoJ3BvcHVwX29wZW5lZCcpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLHRoaXMuX2hhbmRsZU92ZXJsYXlDbG9zZS5iaW5kKHRoaXMpKTtcbiAgfVxuICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XG4gICAgaWYgKGV2dC5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9XG4gIF9oYW5kbGVPdmVybGF5Q2xvc2UoZXZ0KSB7XG4gICAgaWYgKGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdwb3B1cCcpIHx8IGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdwb3B1cF9fY2xvc2UnKSkge1xuICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cbiAgcmVuZGVyTG9hZGluZyhpc0xvYWRpbmcsIGRlZmF1bHRUZXh0KSB7XG4gICAgaWYgKGlzTG9hZGluZykge1xuICAgICAgdGhpcy5fYnV0dG9uLnRleHRDb250ZW50ID0gJ9Ch0L7RhdGA0LDQvdC10L3QuNC1Li4uJztcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fYnV0dG9uLnRleHRDb250ZW50ID0gZGVmYXVsdFRleHQ7XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQge1BvcHVwfSBmcm9tICcuL1BvcHVwLmpzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHtzdWJtaXRGb3JtfSwgcG9wdXApe1xyXG4gICAgc3VwZXIocG9wdXApO1xyXG4gICAgdGhpcy5fc3VibWl0Rm9ybSA9IHN1Ym1pdEZvcm07XHJcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtJyk7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2lucHV0Jyk7XHJcbiAgfVxyXG5cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICB0aGlzLl9mb3JtVmFsdWVzID0ge307XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dCA9PiB7XHJcbiAgICAgIHRoaXMuX2Zvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHRoaXMuX2Zvcm1WYWx1ZXM7XHJcbiAgfVxyXG5cclxuICBzZXRJbnB1dFZhbHVlcyhmb3JtVmFsdWVzKSB7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dCA9PiB7XHJcbiAgICAgIGlucHV0LnZhbHVlID0gZm9ybVZhbHVlc1tpbnB1dC5uYW1lXTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKTtcclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgdGhpcy5fc3VibWl0Rm9ybSk7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7UG9wdXB9IGZyb20gJy4vUG9wdXAuanMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwKXtcclxuICAgIHN1cGVyKHBvcHVwKTtcclxuICB9XHJcbiAgb3BlbihuYW1lLCBsaW5rKSB7XHJcbiAgICBjb25zdCBwb3B1cEltYWdlSW1hZ2UgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXAtaW1hZ2VfX2ltYWdlJyk7XHJcbiAgICBjb25zdCBwb3B1cEltYWdlVGl0bGUgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXAtaW1hZ2VfX3RpdGxlJyk7XHJcbiAgICBwb3B1cEltYWdlSW1hZ2Uuc3JjID0gbGluaztcclxuICAgIHBvcHVwSW1hZ2VJbWFnZS5hbHQgPSBuYW1lO1xyXG4gICAgcG9wdXBJbWFnZVRpdGxlLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcihwcm9maWxlTmFtZSwgcHJvZmlsZVN1Yk5hbWUpIHtcclxuICAgIHRoaXMuX3Byb2ZpbGVOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwcm9maWxlTmFtZSk7XHJcbiAgICB0aGlzLl9wcm9maWxlU3ViTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocHJvZmlsZVN1Yk5hbWUpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuYW1lOiB0aGlzLl9wcm9maWxlTmFtZS50ZXh0Q29udGVudCxcclxuICAgICAgc3ViTmFtZTogdGhpcy5fcHJvZmlsZVN1Yk5hbWUudGV4dENvbnRlbnRcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBzZXRVc2VySW5mbyh7bmFtZSwgYWJvdXR9KSB7XHJcbiAgICB0aGlzLl9wcm9maWxlTmFtZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICB0aGlzLl9wcm9maWxlU3ViTmFtZS50ZXh0Q29udGVudCA9IGFib3V0O1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuL1BvcHVwXCI7XHJcbmV4cG9ydCBjbGFzcyBQb3B1cFdpdGhTdWJtaXQgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3Ioe3N1Ym1pdEZvcm19LCBwb3B1cCl7XHJcbiAgICBzdXBlcihwb3B1cCk7XHJcbiAgICB0aGlzLl9zdWJtaXRGb3JtID0gc3VibWl0Rm9ybTtcclxuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcclxuICAgIHRoaXMuX2lkID0gJyc7XHJcbiAgICB0aGlzLl9jYXJkID0gJyc7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9ICcnO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCB0aGlzLl9zdWJtaXRGb3JtKTtcclxuICB9XHJcblxyXG4gIHNldENhcmQoY2FyZCwgZWxlbWVudCkge1xyXG4gICAgdGhpcy5faWQgPSBjYXJkLl9pZDtcclxuICAgIHRoaXMuX2NhcmQgPSBjYXJkO1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSBlbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgZ2V0Q2FyZEVsZW1lbnQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fY2FyZEVsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICBnZXRDYXJkKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2NhcmQ7XHJcbiAgfVxyXG5cclxuICBnZXRJZENhcmQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5faWQ7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXTtcblxuLy9leHBvcnQgbGV0IHByb2ZpbGVJZCA9ICcnO1xuXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBmb3JtOiAnLnBvcHVwX19mb3JtJyxcbiAgaW5wdXQ6ICcucG9wdXBfX2lucHV0JyxcbiAgYnV0dG9tOiAnLnBvcHVwX19idXR0b24nLFxuICBpbnB1dEVycm9yOiAncG9wdXBfX2lucHV0X3R5cGVfZXJyb3InLFxuICBzcGFuRXJyb3I6ICdwb3B1cF9faW5wdXQtZXJyb3InLFxuICBidXR0b25WYWxpZDogJ3BvcHVwX19idXR0b25fdmFsaWQnLFxuICBidXR0b25JbnZhbGlkOiAncG9wdXBfX2J1dHRvbl9pbnZhbGlkJyxcbiAgZm9ybUNhcmRBZGQ6ICdwb3B1cF9fZm9ybV9jYXJkcy1hZGQnXG59O1xuXG5leHBvcnQgY29uc3QgYnV0dG9uT3BlblBvcHVwUHJvZmlsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2luZm8tYnV0dG9uJyk7XG5leHBvcnQgY29uc3QgYnV0dG9uT3BlblBvcHVwQ2FyZHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYnV0dG9uJyk7XG5leHBvcnQgY29uc3QgYnV0dG9uT3BlblBvcHVwQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2J1dHRvbi1hdmF0YXInKTtcblxuZXhwb3J0IGNvbnN0IHBvcHVwUHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9lZGl0LXByb2ZpbGUnKTtcbmV4cG9ydCBjb25zdCBwb3B1cENhcmRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX2NhcmRzLWFkZCcpO1xuZXhwb3J0IGNvbnN0IHBvcHVwQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwLWF2YXRhcicpO1xuIiwiaW1wb3J0ICcuL2luZGV4LmNzcyc7XG5pbXBvcnQgeyBBcGkgfSBmcm9tICcuLi9zY3JpcHRzL2NvbXBvbmVudHMvQXBpJztcbmltcG9ydCB7Rm9ybVZhbGlkYXRvcn0gZnJvbSAnLi4vc2NyaXB0cy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMnO1xuaW1wb3J0IHtDYXJkfSBmcm9tICcuLi9zY3JpcHRzL2NvbXBvbmVudHMvQ2FyZC5qcyc7XG5pbXBvcnQge1NlY3Rpb259IGZyb20gJy4uL3NjcmlwdHMvY29tcG9uZW50cy9TZWN0aW9uLmpzJztcbmltcG9ydCB7UG9wdXBXaXRoRm9ybX0gZnJvbSAnLi4vc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMnO1xuaW1wb3J0IHtQb3B1cFdpdGhJbWFnZX0gZnJvbSAnLi4vc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzJztcbmltcG9ydCB7VXNlckluZm99IGZyb20gJy4uL3NjcmlwdHMvY29tcG9uZW50cy9Vc2VySW5mby5qcyc7XG5pbXBvcnQge1BvcHVwV2l0aFN1Ym1pdH0gZnJvbSAnLi4vc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aFN1Ym1pdCc7XG5pbXBvcnQge2luaXRpYWxDYXJkcyxcbiAgY29uZmlnLFxuICBidXR0b25PcGVuUG9wdXBQcm9maWwsXG4gIGJ1dHRvbk9wZW5Qb3B1cENhcmRzLFxuICBidXR0b25PcGVuUG9wdXBBdmF0YXIsXG4gIHBvcHVwUHJvZmlsZSxcbiAgcG9wdXBDYXJkcyxcbiAgcG9wdXBBdmF0YXJ9IGZyb20gJy4uL3NjcmlwdHMvdXRpbHMvY29uc3RhbnRzLmpzJztcbmxldCBwcm9maWxlSWQgPSAnJztcblxuY29uc3QgdmFsaWRhdGVQcm9maWxlID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLCBwb3B1cFByb2ZpbGUpO1xuY29uc3QgdmFsaWRhdGVDYXJkcyA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgcG9wdXBDYXJkcyk7XG5jb25zdCB2YWxpZGF0ZUF2YXRhciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgcG9wdXBBdmF0YXIpO1xuXG52YWxpZGF0ZVByb2ZpbGUuZW5hYmxlVmFsaWRhdGlvbigpO1xudmFsaWRhdGVDYXJkcy5lbmFibGVWYWxpZGF0aW9uKCk7XG52YWxpZGF0ZUF2YXRhci5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbmNvbnN0IGFwaSA9IG5ldyBBcGkoKTtcblxuYXBpLmdldEluaXRpYWxQcm9maWxlKClcbiAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgIGNvbnN0IG5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fbmFtZScpO1xuICAgIGNvbnN0IGFib3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX3N1Yi1uYW1lJyk7XG4gICAgY29uc3QgYXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2F2YXRhcicpO1xuICAgIG5hbWUudGV4dENvbnRlbnQgPSByZXN1bHQubmFtZTtcbiAgICBhYm91dC50ZXh0Q29udGVudCA9IHJlc3VsdC5hYm91dDtcbiAgICBhdmF0YXIuc3JjID0gcmVzdWx0LmF2YXRhcjtcbiAgICBwcm9maWxlSWQgPSByZXN1bHQuX2lkO1xuICAgIHJldHVybiBhcGkuZ2V0SW5pdGlhbENhcmQoKTtcbiAgfSkudGhlbigocmVzdWx0KSA9PiB7XG4gICAgcmVzdWx0LmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIGluaXRpYWxDYXJkcy5wdXNoKGl0ZW0pO1xuICAgICAgfSk7XG5cbiAgICBjb25zdCBwb3B1cFNhdmVQcm9maWxlID0gbmV3IFVzZXJJbmZvKCcucHJvZmlsZV9fbmFtZScsICcucHJvZmlsZV9fc3ViLW5hbWUnKTtcblxuICAgIGNvbnN0IHBvcHVwRWRpdFByb2ZpbGUgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XG4gICAgICBzdWJtaXRGb3JtKGV2dCl7XG4gICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBwb3B1cEVkaXRBdmF0YXIucmVuZGVyTG9hZGluZyh0cnVlKTtcbiAgICAgICAgYXBpLnBhdGNoUHJvZmlsZShwb3B1cEVkaXRQcm9maWxlLmdldElucHV0VmFsdWVzKCkpXG4gICAgICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgICBwb3B1cFNhdmVQcm9maWxlLnNldFVzZXJJbmZvKHJlc3VsdCk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgICAgIHBvcHVwRWRpdEF2YXRhci5yZW5kZXJMb2FkaW5nKGZhbHNlLCAn0KHQvtGF0YDQsNC90LjRgtGMJyk7XG4gICAgICAgICAgcG9wdXBFZGl0UHJvZmlsZS5jbG9zZSgpO1xuICAgICAgICB9KTtcbiAgICAgIH19LCcucG9wdXBfZWRpdC1wcm9maWxlJyk7XG4gICAgcG9wdXBFZGl0UHJvZmlsZS5zZXRFdmVudExpc3RlbmVycygpO1xuXG4gICAgY29uc3QgcG9wdXBDYXJkQWRkID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICAgICAgc3VibWl0Rm9ybShldnQpe1xuICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgcG9wdXBDYXJkQWRkLnJlbmRlckxvYWRpbmcodHJ1ZSk7XG4gICAgICAgIGFwaS5hZGROZXdDYXJkKHBvcHVwQ2FyZEFkZC5nZXRJbnB1dFZhbHVlcygpKVxuICAgICAgICAudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgICAgZGVmYXVsdENhcmRMaXN0LnJlbmRlckl0ZW0ocmVzdWx0KTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KVxuICAgICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgcG9wdXBDYXJkQWRkLnJlbmRlckxvYWRpbmcoZmFsc2UsICfQodC+0LfQtNCw0YLRjCcpO1xuICAgICAgICAgIHBvcHVwQ2FyZEFkZC5jbG9zZSgpO1xuICAgICAgICB9KTtcbiAgICB9fSwnLnBvcHVwX2NhcmRzLWFkZCcpO1xuICAgIHBvcHVwQ2FyZEFkZC5zZXRFdmVudExpc3RlbmVycygpO1xuXG4gICAgY29uc3QgcG9wdXBEZWxpdGVDYXJkID0gbmV3IFBvcHVwV2l0aFN1Ym1pdCh7XG4gICAgICBzdWJtaXRGb3JtKGV2dCl7XG4gICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBwb3B1cERlbGl0ZUNhcmQucmVuZGVyTG9hZGluZyh0cnVlKTtcbiAgICAgICAgYXBpLmRlbGl0ZUNhcmQocG9wdXBEZWxpdGVDYXJkLmdldElkQ2FyZCgpKVxuICAgICAgICAudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgICAgY29uc3QgZWxlbWVudCA9IHBvcHVwRGVsaXRlQ2FyZC5nZXRDYXJkRWxlbWVudCgpO1xuICAgICAgICAgIGVsZW1lbnQucmVtb3ZlKCk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgICAgIHBvcHVwRGVsaXRlQ2FyZC5yZW5kZXJMb2FkaW5nKGZhbHNlLCAn0JTQsCcpO1xuICAgICAgICAgIHBvcHVwRGVsaXRlQ2FyZC5jbG9zZSgpO1xuICAgICAgICB9KTtcbiAgICAgIH19LCcucG9wdXAtZGVsaXRlLWNhcmQnKTtcbiAgICBwb3B1cERlbGl0ZUNhcmQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgIGNvbnN0IHBvcHVwRWRpdEF2YXRhciA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcbiAgICAgIHN1Ym1pdEZvcm0oZXZ0KXtcbiAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHBvcHVwRWRpdEF2YXRhci5yZW5kZXJMb2FkaW5nKHRydWUpO1xuICAgICAgICBjb25zdCBhdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYXZhdGFyJyk7XG4gICAgICAgIGNvbnN0IGxpbmtBdmF0YXIgPSBwb3B1cEVkaXRBdmF0YXIuZ2V0SW5wdXRWYWx1ZXMoKTtcbiAgICAgICAgYXBpLnBhdGNoQXZhdGFyKGxpbmtBdmF0YXIubGluaylcbiAgICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICAgIGF2YXRhci5zcmMgPSBsaW5rQXZhdGFyLmxpbms7XG4gICAgICAgIH0pLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KVxuICAgICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgcG9wdXBFZGl0QXZhdGFyLnJlbmRlckxvYWRpbmcoZmFsc2UsICfQodC+0YXRgNCw0L3QuNGC0YwnKTtcbiAgICAgICAgICBwb3B1cEVkaXRBdmF0YXIuY2xvc2UoKTtcbiAgICAgICAgfSk7XG4gICAgfX0sJy5wb3B1cC1hdmF0YXInKTtcbiAgICBwb3B1cEVkaXRBdmF0YXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgIGNvbnN0IGNhcmRDbGljayA9IG5ldyBQb3B1cFdpdGhJbWFnZSgnLnBvcHVwLWltYWdlJyk7XG4gICAgY2FyZENsaWNrLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbiAgICBjb25zdCBkZWZhdWx0Q2FyZExpc3QgPSBuZXcgU2VjdGlvbih7XG4gICAgICBkYXRhOiBpbml0aWFsQ2FyZHMsXG4gICAgICByZW5kZXJlcjogKGl0ZW0pID0+IHtcbiAgICAgICAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKHtcbiAgICAgICAgICBpdGVtLFxuICAgICAgICAgIGhhbmRsZUNhcmRDbGljazogKCkgPT4ge1xuICAgICAgICAgICAgY2FyZENsaWNrLm9wZW4oaXRlbS5uYW1lLCBpdGVtLmxpbmspO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgaGFuZGxlTGlrZUNsaWNrOiAoZXZ0KSA9PiB7XG4gICAgICAgICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoJ2VsZW1lbnRfX2xpa2VfYWN0aXZlJyk7XG4gICAgICAgICAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ2VsZW1lbnRfX2xpa2VfYWN0aXZlJykpIHtcbiAgICAgICAgICAgICAgYXBpLmFkZExpa2UoaXRlbS5faWQpXG4gICAgICAgICAgICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICBjYXJkLmF1Z21lbnROdW1iZXJMaWtlKCk7XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBhcGkuZGVsaXRlTGlrZShpdGVtLl9pZClcbiAgICAgICAgICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgICAgIGNhcmQuc3VidHJhY3ROdW1iZXJMaWtlKCk7XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBoYW5kbGVEZWxpdGVJY29uQ2xpY2s6IChldnQpID0+IHtcbiAgICAgICAgICAgIHBvcHVwRGVsaXRlQ2FyZC5zZXRDYXJkKGl0ZW0sIGV2dC50YXJnZXQuY2xvc2VzdCgnLmVsZW1lbnQnKSk7XG4gICAgICAgICAgICBwb3B1cERlbGl0ZUNhcmQub3BlbigpO1xuICAgICAgICAgIH1cbiAgICAgICAgICB9LCAnLnRlbXBsYXRlLWVsZW1lbnQnKTtcbiAgICAgICAgY2FyZC5yZW5kZXJMaWtlKHByb2ZpbGVJZCwgaXRlbS5saWtlcyk7XG4gICAgICAgIGNhcmQucmVtb3ZlRGVsaXRlSWNvbihwcm9maWxlSWQsIGl0ZW0ub3duZXIuX2lkKTtcbiAgICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLnJlbmRlckNhcmRzKCk7XG4gICAgICAgIGRlZmF1bHRDYXJkTGlzdC5zZXRJdGVtKGNhcmRFbGVtZW50KTtcbiAgICAgIH1cbiAgICB9LCAnLmVsZW1lbnRzX19ncmlkJyk7XG5cbiAgICBidXR0b25PcGVuUG9wdXBQcm9maWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICB2YWxpZGF0ZVByb2ZpbGUucmVzZXRWYWxpZGF0aW9uKCk7XG4gICAgICBwb3B1cEVkaXRQcm9maWxlLnNldElucHV0VmFsdWVzKHBvcHVwU2F2ZVByb2ZpbGUuZ2V0VXNlckluZm8oKSk7XG4gICAgICBwb3B1cEVkaXRQcm9maWxlLm9wZW4oKTtcbiAgICB9KTtcblxuICAgIGJ1dHRvbk9wZW5Qb3B1cENhcmRzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgdmFsaWRhdGVDYXJkcy5yZXNldFZhbGlkYXRpb24oKTtcbiAgICAgIHBvcHVwQ2FyZEFkZC5vcGVuKCk7XG4gICAgfSk7XG5cbiAgICBidXR0b25PcGVuUG9wdXBBdmF0YXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICB2YWxpZGF0ZUF2YXRhci5yZXNldFZhbGlkYXRpb24oKTtcbiAgICAgIHBvcHVwRWRpdEF2YXRhci5vcGVuKCk7XG4gICAgfSk7XG5cbiAgICBkZWZhdWx0Q2FyZExpc3QucmVuZGVySXRlbXMoKTtcbiAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycik7XG59KTtcbiJdLCJuYW1lcyI6WyJBcGkiLCJ0aGlzIiwiX2F1dGhvcml6YXRpb24iLCJmZXRjaCIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwidGhlbiIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJkYXRhIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJuYW1lIiwiYWJvdXQiLCJzdWJOYW1lIiwibGluayIsImlkIiwiYXZhdGFyIiwiRm9ybVZhbGlkYXRvciIsImNvbmZpZyIsImZvcm1FbGVtZW50IiwiX2NvbmZpZyIsIl9mb3JtRWxlbWVudCIsIl9pbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiaW5wdXQiLCJfYnV0dG9uRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJidXR0b20iLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJmb3JFYWNoIiwiaW5wdXRFbGVtZW50IiwiX2hpZGVJbnB1dEVycm9yIiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2dCIsInByZXZlbnREZWZhdWx0IiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCIsImlucHV0RXJyb3IiLCJ0ZXh0Q29udGVudCIsInNwYW5FcnJvciIsInJlbW92ZSIsImJ1dHRvbkVsZW1lbnQiLCJidXR0b25WYWxpZCIsImJ1dHRvbkludmFsaWQiLCJzZXRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJpbnB1dExpc3QiLCJfaGFzSW52YWxpZElucHV0IiwiX2Rpc2FibGVCdXR0b24iLCJfYWN0aXZhdGVCdXR0b24iLCJzb21lIiwiQ2FyZCIsInNlbGVjdG9yVGVtcGxhdGUiLCJpdGVtIiwiaGFuZGxlQ2FyZENsaWNrIiwiaGFuZGxlTGlrZUNsaWNrIiwiaGFuZGxlRGVsaXRlSWNvbkNsaWNrIiwiX2NhcmQiLCJfdGVtcGxhdGUiLCJkb2N1bWVudCIsImNvbnRlbnQiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2hhbmRsZURlbGl0ZUljb25DbGljayIsIl9oYW5kbGVMaWtlQ2xpY2siLCJfZWxlbWVudCIsImNsb25lTm9kZSIsIl9jYXJkSW1hZ2UiLCJfZGVsaXRlSWNvbiIsIl9saWtlIiwiX2xpa2VOdW1iZXIiLCJzcmMiLCJhbHQiLCJfcmVuZGVyTGlrZU51bWJlciIsImxpa2VzIiwibGVuZ3RoIiwicHJvZmlsZUlkIiwiY2FyZElkIiwiX2lkIiwidG9nZ2xlIiwiTnVtYmVyIiwiX3NldEV2ZW50RGVsaXRlIiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwicmVuZGVyZXIiLCJfcmVuZGVyZWRJdGVtcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJlbGVtZW50IiwicHJlcGVuZCIsIlBvcHVwIiwicG9wdXAiLCJfcG9wdXAiLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwiX2J1dHRvbiIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJfaGFuZGxlT3ZlcmxheUNsb3NlIiwia2V5IiwiY2xvc2UiLCJ0YXJnZXQiLCJjb250YWlucyIsImlzTG9hZGluZyIsImRlZmF1bHRUZXh0IiwiUG9wdXBXaXRoRm9ybSIsInN1Ym1pdEZvcm0iLCJfc3VibWl0Rm9ybSIsIl9mb3JtIiwiX2Zvcm1WYWx1ZXMiLCJ2YWx1ZSIsImZvcm1WYWx1ZXMiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJyZXNldCIsIlBvcHVwV2l0aEltYWdlIiwicG9wdXBJbWFnZUltYWdlIiwicG9wdXBJbWFnZVRpdGxlIiwiVXNlckluZm8iLCJwcm9maWxlTmFtZSIsInByb2ZpbGVTdWJOYW1lIiwiX3Byb2ZpbGVOYW1lIiwiX3Byb2ZpbGVTdWJOYW1lIiwiUG9wdXBXaXRoU3VibWl0IiwiX2NhcmRFbGVtZW50IiwiY2FyZCIsImluaXRpYWxDYXJkcyIsImZvcm0iLCJmb3JtQ2FyZEFkZCIsImJ1dHRvbk9wZW5Qb3B1cFByb2ZpbCIsImJ1dHRvbk9wZW5Qb3B1cENhcmRzIiwiYnV0dG9uT3BlblBvcHVwQXZhdGFyIiwicG9wdXBQcm9maWxlIiwicG9wdXBDYXJkcyIsInBvcHVwQXZhdGFyIiwidmFsaWRhdGVQcm9maWxlIiwidmFsaWRhdGVDYXJkcyIsInZhbGlkYXRlQXZhdGFyIiwiZW5hYmxlVmFsaWRhdGlvbiIsImFwaSIsImdldEluaXRpYWxQcm9maWxlIiwicmVzdWx0IiwiZ2V0SW5pdGlhbENhcmQiLCJwdXNoIiwicG9wdXBTYXZlUHJvZmlsZSIsInBvcHVwRWRpdFByb2ZpbGUiLCJwb3B1cEVkaXRBdmF0YXIiLCJyZW5kZXJMb2FkaW5nIiwicGF0Y2hQcm9maWxlIiwiZ2V0SW5wdXRWYWx1ZXMiLCJzZXRVc2VySW5mbyIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImZpbmFsbHkiLCJzZXRFdmVudExpc3RlbmVycyIsInBvcHVwQ2FyZEFkZCIsImFkZE5ld0NhcmQiLCJkZWZhdWx0Q2FyZExpc3QiLCJyZW5kZXJJdGVtIiwicG9wdXBEZWxpdGVDYXJkIiwiZGVsaXRlQ2FyZCIsImdldElkQ2FyZCIsImdldENhcmRFbGVtZW50IiwibGlua0F2YXRhciIsInBhdGNoQXZhdGFyIiwiY2FyZENsaWNrIiwib3BlbiIsImFkZExpa2UiLCJhdWdtZW50TnVtYmVyTGlrZSIsImRlbGl0ZUxpa2UiLCJzdWJ0cmFjdE51bWJlckxpa2UiLCJzZXRDYXJkIiwiY2xvc2VzdCIsInJlbmRlckxpa2UiLCJyZW1vdmVEZWxpdGVJY29uIiwib3duZXIiLCJjYXJkRWxlbWVudCIsInJlbmRlckNhcmRzIiwic2V0SXRlbSIsInJlc2V0VmFsaWRhdGlvbiIsInNldElucHV0VmFsdWVzIiwiZ2V0VXNlckluZm8iLCJyZW5kZXJJdGVtcyJdLCJzb3VyY2VSb290IjoiIn0=